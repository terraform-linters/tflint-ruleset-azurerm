// This file generated by `tools/apispec-rule-gen/main.go`. DO NOT EDIT

package apispec

import (

	hcl "github.com/hashicorp/hcl/v2"
	"github.com/terraform-linters/tflint-plugin-sdk/tflint"
	"github.com/terraform-linters/tflint-ruleset-azurerm/project"
)

// AzurermFirewallApplicationRuleCollectionInvalidPriorityRule checks the pattern is valid
type AzurermFirewallApplicationRuleCollectionInvalidPriorityRule struct {
	resourceType  string
	attributeName string
	max           int
	min           int
}

// NewAzurermFirewallApplicationRuleCollectionInvalidPriorityRule returns new rule with default attributes
func NewAzurermFirewallApplicationRuleCollectionInvalidPriorityRule() *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule {
	return &AzurermFirewallApplicationRuleCollectionInvalidPriorityRule{
		resourceType:  "azurerm_firewall_application_rule_collection",
		attributeName: "priority",
		max:           65000,
		min:           100,
	}
}

// Name returns the rule name
func (r *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule) Name() string {
	return "azurerm_firewall_application_rule_collection_invalid_priority"
}

// Enabled returns whether the rule is enabled by default
func (r *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule) Enabled() bool {
	return true
}

// Severity returns the rule severity
func (r *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule) Severity() string {
	return tflint.ERROR
}

// Link returns the rule reference link
func (r *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule) Link() string {
	return project.ReferenceLink(r.Name())
}

// Check checks the pattern is valid
func (r *AzurermFirewallApplicationRuleCollectionInvalidPriorityRule) Check(runner tflint.Runner) error {
	return runner.WalkResourceAttributes(r.resourceType, r.attributeName, func(attribute *hcl.Attribute) error {
		var val int
		err := runner.EvaluateExpr(attribute.Expr, &val, nil)

		return runner.EnsureNoError(err, func() error {
			if val > r.max {
				runner.EmitIssueOnExpr(
					r,
					"priority must be 65000 or less",
					attribute.Expr,
				)
			}
			if val < r.min {
				runner.EmitIssueOnExpr(
					r,
					"priority must be 100 or higher",
					attribute.Expr,
				)
			}
			return nil
		})
	})
}
