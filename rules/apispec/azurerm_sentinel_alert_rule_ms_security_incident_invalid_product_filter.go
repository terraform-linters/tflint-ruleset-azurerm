// This file generated by `tools/apispec-rule-gen/main.go`. DO NOT EDIT

package apispec

import (
	"fmt"

	"github.com/terraform-linters/tflint-plugin-sdk/hclext"
	"github.com/terraform-linters/tflint-plugin-sdk/tflint"
	"github.com/terraform-linters/tflint-ruleset-azurerm/project"
)

// AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule checks the pattern is valid
type AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule struct {
	tflint.DefaultRule

	resourceType  string
	attributeName string
	enum          []string
}

// NewAzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule returns new rule with default attributes
func NewAzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule() *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule {
	return &AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule{
		resourceType:  "azurerm_sentinel_alert_rule_ms_security_incident",
		attributeName: "product_filter",
		enum: []string{
			"Microsoft Cloud App Security",
			"Azure Security Center",
			"Azure Advanced Threat Protection",
			"Azure Active Directory Identity Protection",
			"Azure Security Center for IoT",
			"Office 365 Advanced Threat Protection",
			"Microsoft Defender Advanced Threat Protection",
		},
	}
}

// Name returns the rule name
func (r *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule) Name() string {
	return "azurerm_sentinel_alert_rule_ms_security_incident_invalid_product_filter"
}

// Enabled returns whether the rule is enabled by default
func (r *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule) Enabled() bool {
	return true
}

// Severity returns the rule severity
func (r *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule) Severity() tflint.Severity {
	return tflint.ERROR
}

// Link returns the rule reference link
func (r *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule) Link() string {
	return project.ReferenceLink(r.Name())
}

// Check checks the pattern is valid
func (r *AzurermSentinelAlertRuleMsSecurityIncidentInvalidProductFilterRule) Check(runner tflint.Runner) error {
	resources, err := runner.GetResourceContent(r.resourceType, &hclext.BodySchema{
		Attributes: []hclext.AttributeSchema{
			{Name: r.attributeName},
		},
	}, nil)
	if err != nil {
		return err
	}

	for _, resource := range resources.Blocks {
		attribute, exists := resource.Body.Attributes[r.attributeName]
		if !exists {
			continue
		}
		var val string
		err := runner.EvaluateExpr(attribute.Expr, &val, nil)

		err = runner.EnsureNoError(err, func() error {
			found := false
			for _, item := range r.enum {
				if item == val {
					found = true
				}
			}
			if !found {
				runner.EmitIssue(
					r,
					fmt.Sprintf(`"%s" is an invalid value as product_filter`, truncateLongMessage(val)),
					attribute.Expr.Range(),
				)
			}
			return nil
		})
		if err != nil {
			return err
		}
	}

	return nil
}
